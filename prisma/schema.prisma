// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  project       Project[]
  comment       Comment[]
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Project {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  author           User      @relation(fields: [authorId], references: [id])
  authorId         String    @db.ObjectId
  title            String
  description      String
  githubRepository String
  coverImg         String?
  tags             String[]
  comment          Comment[]
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

model Comment {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  username    User     @relation(fields: [userId], references: [id])
  userId      String   @db.ObjectId
  description String
  project     Project  @relation(fields: [projectId], references: [id])
  projectId   String   @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
